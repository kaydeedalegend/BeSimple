-- Initialization SQL for To-Do App Database

-- Create Users Table
CREATE TABLE IF NOT EXISTS users (
    id TEXT PRIMARY KEY,          -- Unique ID for the user
    email TEXT NOT NULL UNIQUE,   -- Unique email for user authentication
    password TEXT NOT NULL,       -- Hashed password
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP, -- Creation timestamp
    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP -- Last updated timestamp
);

-- Create Tasks Table
CREATE TABLE IF NOT EXISTS tasks (
    id TEXT PRIMARY KEY,             -- Unique ID for the task
    user_id TEXT NOT NULL,           -- Foreign key to associate with user
    title TEXT NOT NULL,             -- Title of the task
    description TEXT,                -- Description of the task (optional)
    is_completed BOOLEAN DEFAULT 0,  -- Task completion status
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP, -- Creation timestamp
    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP, -- Last updated timestamp
    FOREIGN KEY (user_id) REFERENCES users(id) -- Relationship to the users table
);

-- Insert Initial Users (Example User)
INSERT INTO users (id, email, password, created_at, updated_at) 
VALUES 
('user-1', 'user@example.com', 'hashed_password', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),
('user-2', 'anotheruser@example.com', 'hashed_password', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP);

-- Insert Initial Tasks for User 1
INSERT INTO tasks (id, user_id, title, description, is_completed, created_at, updated_at) 
VALUES 
('task-1', 'user-1', 'Sample Task 1', 'This is the first sample task.', 0, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),
('task-2', 'user-1', 'Sample Task 2', 'This is the second sample task.', 0, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP);

-- Insert Initial Tasks for User 2
INSERT INTO tasks (id, user_id, title, description, is_completed, created_at, updated_at) 
VALUES 
('task-3', 'user-2', 'Sample Task 3', 'This is the first task for another user.', 0, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP);